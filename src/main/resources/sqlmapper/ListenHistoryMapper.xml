<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sam.graduation.design.gdmusicserver.dao.ListenHistoryMapper">
  <resultMap id="BaseResultMap" type="com.sam.graduation.design.gdmusicserver.model.pojo.ListenHistory">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="music_id" jdbcType="BIGINT" property="musicId" />
    <result column="listened_time" jdbcType="TIMESTAMP" property="listenedTime" />
    <result column="created_time" jdbcType="TIMESTAMP" property="createdTime" />
    <result column="last_modified_time" jdbcType="TIMESTAMP" property="lastModifiedTime" />
    <result column="is_delete" jdbcType="TINYINT" property="isDelete" />
  </resultMap>
  <sql id="Base_Column_List">
    id, user_id, music_id, listened_time, created_time, last_modified_time, is_delete
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from listen_history
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from listen_history
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.sam.graduation.design.gdmusicserver.model.pojo.ListenHistory">
    insert into listen_history (id, user_id, music_id, 
      listened_time, created_time, last_modified_time, 
      is_delete)
    values (#{id,jdbcType=BIGINT}, #{userId,jdbcType=BIGINT}, #{musicId,jdbcType=BIGINT}, 
      #{listenedTime,jdbcType=TIMESTAMP}, #{createdTime,jdbcType=TIMESTAMP}, #{lastModifiedTime,jdbcType=TIMESTAMP}, 
      #{isDelete,jdbcType=TINYINT})
  </insert>
  <insert id="insertSelective" parameterType="com.sam.graduation.design.gdmusicserver.model.pojo.ListenHistory">
    insert into listen_history
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="musicId != null">
        music_id,
      </if>
      <if test="listenedTime != null">
        listened_time,
      </if>
      <if test="createdTime != null">
        created_time,
      </if>
      <if test="lastModifiedTime != null">
        last_modified_time,
      </if>
      <if test="isDelete != null">
        is_delete,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="musicId != null">
        #{musicId,jdbcType=BIGINT},
      </if>
      <if test="listenedTime != null">
        #{listenedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createdTime != null">
        #{createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastModifiedTime != null">
        #{lastModifiedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isDelete != null">
        #{isDelete,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.sam.graduation.design.gdmusicserver.model.pojo.ListenHistory">
    update listen_history
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="musicId != null">
        music_id = #{musicId,jdbcType=BIGINT},
      </if>
      <if test="listenedTime != null">
        listened_time = #{listenedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createdTime != null">
        created_time = #{createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastModifiedTime != null">
        last_modified_time = #{lastModifiedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isDelete != null">
        is_delete = #{isDelete,jdbcType=TINYINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.sam.graduation.design.gdmusicserver.model.pojo.ListenHistory">
    update listen_history
    set user_id = #{userId,jdbcType=BIGINT},
      music_id = #{musicId,jdbcType=BIGINT},
      listened_time = #{listenedTime,jdbcType=TIMESTAMP},
      created_time = #{createdTime,jdbcType=TIMESTAMP},
      last_modified_time = #{lastModifiedTime,jdbcType=TIMESTAMP},
      is_delete = #{isDelete,jdbcType=TINYINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>